# Generated by Django 2.2.1 on 2019-06-04 10:17

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rid', models.IntegerField()),
                ('vote', models.IntegerField()),
                ('accepted', models.IntegerField()),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'answer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rid', models.IntegerField()),
                ('score', models.IntegerField()),
                ('content', models.TextField()),
                ('user', models.TextField()),
                ('user_href', models.TextField()),
                ('time', models.TextField()),
            ],
            options={
                'db_table': 'comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LinkedQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rid', models.IntegerField()),
                ('qid', models.IntegerField()),
                ('title', models.TextField()),
                ('link', models.TextField()),
                ('vote', models.IntegerField()),
                ('accepted', models.IntegerField()),
            ],
            options={
                'db_table': 'linked_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('link', models.TextField()),
                ('asked', models.TextField()),
                ('viewed', models.IntegerField()),
                ('active', models.TextField(blank=True, null=True)),
                ('vote', models.IntegerField()),
                ('star', models.IntegerField(blank=True, null=True)),
                ('content', models.TextField()),
                ('status', models.TextField(blank=True, null=True)),
                ('tags', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelatedQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rid', models.IntegerField()),
                ('qid', models.IntegerField()),
                ('title', models.TextField()),
                ('link', models.TextField()),
                ('vote', models.IntegerField()),
                ('accepted', models.IntegerField()),
            ],
            options={
                'db_table': 'related_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rid', models.IntegerField()),
                ('name', models.TextField(blank=True, null=True)),
                ('action', models.TextField(blank=True, null=True)),
                ('time', models.TextField(blank=True, null=True)),
                ('link', models.TextField(blank=True, null=True)),
                ('is_owner', models.IntegerField()),
                ('revision', models.TextField(blank=True, null=True)),
                ('reputation', models.IntegerField(blank=True, null=True)),
                ('gold', models.IntegerField(blank=True, null=True)),
                ('silver', models.IntegerField(blank=True, null=True)),
                ('bronze', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
    ]
